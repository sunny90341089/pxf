apply plugin: "java-library"

jar {
    enabled = true
}

dependencies {
    /*******************************
     * API Dependencies
     *******************************/

    /*******************************
     * Compile Only Dependencies
     *******************************/

    compileOnly("org.apache.hadoop:hadoop-annotations:${hadoopVersion}") { transitive = false }

    /*******************************
     * Implementation Dependencies
     *******************************/

    implementation(project(':pxf-api'))
    implementation(project(':pxf-hdfs'))
    implementation("org.springframework.boot:spring-boot-starter-log4j2")

    implementation("com.google.guava:guava")
    implementation("commons-codec:commons-codec")
    implementation("commons-lang:commons-lang")
    implementation("org.apache.hive:hive-exec:${hiveVersion}:core") { transitive = false }
    implementation("org.apache.hive:hive-metastore:${hiveVersion}") { transitive = false }
    implementation("org.apache.hive:hive-serde:${hiveVersion}")     { transitive = false }
    implementation("com.esotericsoftware:kryo:3.0.3")               { transitive = false }

    /*******************************
     * Transitive dependencies for hive-exec-core. Instead of bundling
     * hive-exec, hive-exec-core is used to avoid conflict with other
     * dependencies included in hive-exec (i.e Parquet) which were causing
     * other tests to fail.
     *******************************/

    implementation("org.apache.hive:hive-common:${hiveVersion}") { transitive = false }
    implementation("org.apache.hive.shims:hive-shims-common:${hiveVersion}") { transitive = false }
    implementation("org.apache.hive.shims:hive-shims-0.23:${hiveVersion}") { transitive = false }
    implementation("org.apache.commons:commons-lang3:3.1") { transitive = false }
    implementation("org.apache.hive:hive-storage-api:2.4.0") { transitive = false }
    implementation("org.apache.orc:orc-core:1.3.4") { transitive = false }
    implementation("io.airlift:aircompressor:0.8") { transitive = false }
    implementation("joda-time:joda-time") { transitive = false }
    implementation("org.objenesis:objenesis:2.1") { transitive = false }
    implementation("com.esotericsoftware:kryo:3.0.3") { transitive = false }
    implementation("com.esotericsoftware:minlog:1.3.0") { transitive = false }
    implementation("com.esotericsoftware:reflectasm:1.11.6") { transitive = false }
    implementation("org.apache.thrift:libfb303:0.9.3") { transitive = false }
    implementation("org.apache.thrift:libthrift:0.9.3") { transitive = false }
    implementation("org.antlr:antlr-runtime:3.5.2") { transitive = false }
    implementation("org.datanucleus:datanucleus-api-jdo:4.2.4") { transitive = false }
    implementation("org.datanucleus:datanucleus-core:4.1.17") { transitive = false }
    implementation("org.xerial.snappy:snappy-java:1.0.5") { transitive = false }
    implementation("javax.jdo:jdo-api:3.0.1") { transitive = false }
    implementation("org.codehaus.jackson:jackson-core-asl:1.9.13") { transitive = false }
    implementation("org.codehaus.jackson:jackson-mapper-asl:1.9.13") { transitive = false }
    implementation("org.jodd:jodd-core:3.5.2") { transitive = false }

    /*******************************
     * Transitive dependency required for reading Hive tables with
     * SerDe 'org.apache.hadoop.hive.serde2.OpenCSVSerde'
     *******************************/

    implementation("net.sf.opencsv:opencsv:2.3") { transitive = false }

    /*******************************
     * Transitive dependency required by MapR
     *******************************/

    implementation("org.json:json:20090211") { transitive = false }

    /*******************************
     * Test Dependencies
     *******************************/

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}
